{"version":3,"file":"static/js/112.8b65943b.chunk.js","mappings":"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","sources":["patients/forms/PatientForm.jsx","patients/components/UpdatePatientModal.jsx","patients/components/DeletePatientModal.jsx","patients/pages/PatientDetail.jsx","shared/components/Button.jsx","shared/components/Container.jsx","shared/components/Input.jsx","shared/components/toast.js"],"sourcesContent":["import Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\n\nconst PatientForm = (props) => {\n  const { patient, handleSubmit, handleOnChange } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        label=\"first_name\"\n        label_txt=\"First Name\"\n        type=\"text\"\n        id=\"first_name\"\n        name=\"first_name\"\n        placeholder=\"Enter First Name\"\n        value={patient.first_name}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"last_name\"\n        label_txt=\"Last Name\"\n        type=\"text\"\n        id=\"last_name\"\n        name=\"last_name\"\n        placeholder=\"Enter Last Name\"\n        value={patient.last_name}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"age\"\n        label_txt=\"Age\"\n        type=\"number\"\n        id=\"age\"\n        name=\"age\"\n        placeholder=\"Enter age\"\n        value={patient.age}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"contact\"\n        label_txt=\"Contact Tel.\"\n        type=\"text\"\n        id=\"contact\"\n        name=\"contact\"\n        placeholder=\"Enter telephone number\"\n        value={patient.contact}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"emergency_contact\"\n        label_txt=\"Emergency Contact Tel.\"\n        type=\"text\"\n        id=\"emergency_contact\"\n        name=\"emergency_contact\"\n        placeholder=\"Enter telephone number\"\n        value={patient.emergency_contact}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"pre_existing_conditions\"\n        label_txt=\"Pre-existing Conditions\"\n        type=\"textarea\"\n        id=\"pre_existing_conditions\"\n        name=\"pre_existing_conditions\"\n        placeholder=\"Enter Pre-existing conditions\"\n        value={patient.pre_existing_conditions}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"symptoms\"\n        label_txt=\"Symptoms\"\n        type=\"textarea\"\n        id=\"symptoms\"\n        name=\"symptoms\"\n        placeholder=\"Enter Symptoms\"\n        value={patient.symptoms}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"diagnosis\"\n        label_txt=\"Diagnosis\"\n        type=\"textarea\"\n        id=\"diagnosis\"\n        name=\"diagnosis\"\n        placeholder=\"Enter Diagnosis\"\n        value={patient.diagnosis}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"treatment\"\n        label_txt=\"Treatment\"\n        type=\"textarea\"\n        id=\"treatment\"\n        name=\"treatment\"\n        placeholder=\"Enter Treatment\"\n        value={patient.treatment}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"medication\"\n        label_txt=\"Medication\"\n        type=\"textarea\"\n        id=\"medication\"\n        name=\"medication\"\n        placeholder=\"Enter Medication\"\n        value={patient.medication}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"comments\"\n        label_txt=\"Comments\"\n        type=\"textarea\"\n        id=\"comments\"\n        name=\"comments\"\n        placeholder=\"Enter Comments\"\n        value={patient.comments}\n        onChange={handleOnChange}\n      />\n      <br />\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n};\nexport default PatientForm;\n","import { useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\nimport PatientForm from \"../forms/PatientForm\";\n\nconst UpdatePatientModal = (props) => {\n  const { show, handleClose, triggerRefresh } = props;\n  const { id } = useParams();\n  const auth = useContext(AuthContext);\n  const [patient, setPatient] = useState(props.patient);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    axios\n      .patch(\n        process.env.REACT_APP_SERVER_URL + `api/patients/update/${id}`,\n        { ...patient },\n        {\n          headers: {\n            Authorization: \"Bearer \" + auth.token,\n          },\n        })\n      .then((resp) => {\n        handleSuccess(\"Successfully updated patient!\");\n        handleClose();\n      })\n      .then(() => triggerRefresh())\n      .catch((err) => {\n        handleError(err.response.data.message);\n      });\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setPatient({\n      ...patient,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      {show ? (\n        <div className=\"bg-black bg-opacity-80 w-full h-full fixed top-0 left-0 flex justify-center\">\n          <div className=\"bg-white overflow-y-auto w-full max-w-sm md:max-w-lg lg:max-w-3xl pl-10 pb-10\">\n            <div className=\"bg-white overflow-auto flex justify-end\">\n              <button\n                type=\"button\"\n                className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                onClick={handleClose}\n              >\n                <span className=\"sr-only\">Close menu</span>\n                <svg\n                  className=\"h-6 w-6\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n            <div className=\"pr-10\">\n              <div className=\"prose\">\n                <h2 className=\"pb-6\">Update Patient</h2>\n              </div>\n              <hr />\n              <br />\n              <PatientForm\n                patient={patient}\n                handleSubmit={handleSubmit}\n                handleOnChange={handleOnChange}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"hidden\"></div>\n      )}\n    </div>\n  );\n};\n\nexport default UpdatePatientModal;\n","import { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Button from \"../../shared/components/Button\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\n\nconst DeletePatientModal = (props) => {\n  const { show, handleClose, triggerRefresh } = props;\n  const { id } = useParams();\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleDelete = async (e) => {\n    e.preventDefault();\n\n    axios\n      .delete(process.env.REACT_APP_SERVER_URL + `api/patients/delete/${id}`, {\n        headers: {\n          Authorization: \"Bearer \" + auth.token\n        },\n      })\n      .then((resp) => {\n        handleSuccess(\"Successfully deleted patient!\");\n        navigate(\"/patients\");\n        handleClose();\n      })\n      .then(() => triggerRefresh())\n      .catch((err) => {\n        handleError(err.response.data.message);\n      });\n  };\n\n  return (\n    <div>\n      {show ? (\n        <div className=\"bg-black bg-opacity-80 w-full h-full fixed top-0 left-0 flex justify-center items-center\">\n          <div>\n            <div className=\"bg-white flex justify-end\">\n              <button\n                type=\"button\"\n                className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                onClick={handleClose}\n              >\n                <span className=\"sr-only\">Close menu</span>\n\n                <svg\n                  className=\"h-6 w-6\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n            <div className=\"bg-white h-56 w-full max-w-sm md:max-w-lg lg:max-w-3xl px-10\">\n              <div className=\"prose\">\n                <h2 className=\"pb-6\">\n                  Are you sure you want to delete this patient?\n                </h2>\n                <p>\n                  <b>Note:</b> This action cannot be undone.\n                </p>\n                <div className=\"flex justify-center w-full\">\n                  <Button variant=\"danger\" onClick={handleDelete}>\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"hidden\"></div>\n      )}\n    </div>\n  );\n};\nexport default DeletePatientModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Container from \"../../shared/components/Container\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { handleError } from \"../../shared/components/toast\";\nimport profile_photo from \"../../imgs/profile_photo.jpeg\";\nimport LoadingSpinner from \"../../shared/components/LoadingSpinner\";\nimport Button from \"../../shared/components/Button\";\nimport UpdatePatientModal from \"../components/UpdatePatientModal\";\nimport DeletePatientModal from \"../components/DeletePatientModal\";\n\nconst PatientDetail = () => {\n  const auth = useContext(AuthContext);\n  const [patient, setPatient] = useState(null);\n  const [updatePatientModal, setUpdatePatientModal] = useState(false);\n  const [deletePatientModal, setDeletePatientModal] = useState(false);\n  const [updated, setUpdated] = useState(false);\n  const [userName, setUserName] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (auth.token) {\n      axios\n        .get(`${process.env.REACT_APP_SERVER_URL}api/patients/fetch/${id}`, {\n          headers: {\n            Authorization: \"Bearer \" + auth.token,\n          },\n        })\n        .then((resp) => {\n          // console.log(resp);\n          setPatient(resp.data.patient);\n        })\n        .then(() => {\n          axios\n            .get(process.env.REACT_APP_SERVER_URL + `api/users/profile`, {\n              headers: {\n                Authorization: \"Bearer \" + auth.token,\n              },\n            })\n            .then((resp) => {\n              const doctor_name = resp.data.name;\n              setUserName(`${doctor_name}`);\n            })\n            .catch((err) => {\n              handleError(err);\n            });\n        })\n        .catch((err) => {\n          handleError(err);\n        });\n    } else {\n      navigate(\"/login\");\n    }\n  }, [auth, id, navigate, updated]);\n\n  if (!patient || !userName) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <Container>\n      <div className=\"prose\">\n        <h2 className=\"pb-6\">Patient Profile</h2>\n      </div>\n      <hr />\n      <br />\n      <div>\n        <div className=\"flex flex-wrap\">\n          <div className=\"pb-10 flex justify-center items-center lg:w-52\">\n            <img\n              src={\n                patient.image\n                  ? process.env.REACT_APP_SERVER_URL + patient.image\n                  : profile_photo\n              }\n              alt={`${patient.first_name} ${patient.last_name}`}\n            />\n          </div>\n\n          <div className=\"w-2/3 lg:pl-8\">\n            <table>\n              <tbody>\n                <tr>\n                  <td className=\"font-bold\">First Name</td>\n                  <td className=\"py-2 pl-4\">{patient.first_name}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Last Name</td>\n                  <td className=\"py-2 pl-4\">{patient.last_name}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Age</td>\n                  <td className=\"py-2 pl-4\">{patient.age}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Contact</td>\n                  <td className=\"py-2 pl-4\">{patient.contact}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Emergency Contact</td>\n                  <td className=\"py-2 pl-4\">{patient.emergency_contact}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Doctor</td>\n                  <td className=\"py-2 pl-4\">{userName}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <br />\n        <hr />\n        <br />\n        <p className=\"font-bold\">Pre-Existing Conditions</p>\n        <p>\n          {patient.pre_existing_conditions\n            ? patient.pre_existing_conditions\n            : \"No Pre-Existing Conditions\"}\n        </p>\n        <br />\n        <p className=\"font-bold\">Symptoms</p>\n        <p>{patient.diagnosis ? patient.symptoms : \"No symptoms assigned\"}</p>\n        <br />\n        <p className=\"font-bold\">Diagnosis</p>\n        <p>{patient.diagnosis ? patient.diagnosis : \"No diagnosis assigned\"}</p>\n        <br />\n        <p className=\"font-bold\">Treatment</p>\n        <p>{patient.treatment ? patient.treatment : \"No treatment assigned\"}</p>\n        <br />\n        <p className=\"font-bold\">Medication</p>\n        <p>\n          {patient.medication ? patient.medication : \"No medication assigned\"}\n        </p>\n        <br />\n        <p className=\"font-bold\">Comments</p>\n        <p>{patient.comments ? patient.comments : \"No comments.\"}</p>\n        <br />\n        <div className=\"flex justify-between\">\n          <Button\n            variant=\"warning\"\n            onClick={() => {\n              setUpdatePatientModal(true);\n            }}\n          >\n            Update\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              setDeletePatientModal(true);\n            }}\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n\n      <div>\n        <UpdatePatientModal\n          show={updatePatientModal}\n          handleClose={() => setUpdatePatientModal(false)}\n          patient={patient}\n          triggerRefresh={() => setUpdated((prev) => !prev)}\n        />\n      </div>\n      <div>\n        <DeletePatientModal\n          show={deletePatientModal}\n          handleClose={() => setDeletePatientModal(false)}\n          patient={patient}\n          triggerRefresh={() => setUpdated((prev) => !prev)}\n        />\n      </div>\n    </Container>\n  );\n};\nexport default PatientDetail;\n","const Button = (props) => {\n  const { variant, type, onClick, children } = props;\n  let bgColor;\n  let bgColorHover;\n  switch (variant) {\n    case \"primary\":\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n    case \"warning\":\n      bgColor = \"bg-yellow-500\";\n      bgColorHover = \"bg-yellow-700\";\n      break;\n    case \"danger\":\n      bgColor = \"bg-red-500\";\n      bgColorHover = \"bg-red-700\";\n      break;\n    default:\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n  }\n  return (\n    <button\n      className={`block ${bgColor} text-white font-bold py-2 px-6 hover:${bgColorHover}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","const Container = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"bg-white w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl p-10 mx-auto\">\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","const Input = (props) => {\n  const { label, label_txt, type, id, name, placeholder, value, onChange } =\n    props;\n\n  let element;\n  if (\n    type === \"text\" ||\n    type === \"number\" ||\n    type === \"email\" ||\n    type === \"password\"\n  ) {\n    element = (\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"border border-gray-300 shadow p-2 w-full\"\n      />\n    );\n  } else if (type === \"textarea\") {\n    element = (\n      <textarea\n        className=\"border border-gray-300 shadow p-2 w-full\"\n        style={{ resize: \"none\" }}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        rows=\"2\"\n        value={value}\n        onChange={onChange}\n      />\n    );\n  } else if (type === \"file\") {\n    element = (\n      <input\n        className=\"border border-gray-300 shadow w-full file:bg-blue-500 file:text-white file:font-bold file:py-2 file:px-4\"\n        type={type}\n        onChange={onChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={label} className=\"block mb-2 font-bold text-gray-600\">\n        {label_txt}\n      </label>\n      {element}\n    </div>\n  );\n};\nexport default Input;\n","import { toast } from \"react-toastify\";\n\nconst handleSuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nconst handleError = (err) =>\n  toast.error(err, {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 3000,\n  });\n\nexport { handleError };\nexport default handleSuccess;\n"],"names":["props","patient","handleSubmit","handleOnChange","_jsxs","onSubmit","children","_jsx","Input","label","label_txt","type","id","name","placeholder","value","first_name","onChange","last_name","age","contact","emergency_contact","pre_existing_conditions","symptoms","diagnosis","treatment","medication","comments","Button","show","handleClose","triggerRefresh","useParams","auth","useContext","AuthContext","setPatient","useState","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","PatientForm","async","e","preventDefault","axios","patch","process","concat","_objectSpread","headers","Authorization","token","then","resp","handleSuccess","catch","err","handleError","response","data","message","target","navigate","useNavigate","variant","delete","PatientDetail","updatePatientModal","setUpdatePatientModal","deletePatientModal","setDeletePatientModal","updated","setUpdated","userName","setUserName","useEffect","get","doctor_name","Container","src","image","profile_photo","alt","UpdatePatientModal","prev","DeletePatientModal","LoadingSpinner","bgColor","bgColorHover","element","style","resize","rows","htmlFor","toast","error","position","POSITION","TOP_RIGHT","autoClose","msg","success"],"sourceRoot":""}