{"version":3,"file":"static/js/958.091e01ee.chunk.js","mappings":"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","sources":["patients/forms/PatientForm.jsx","patients/pages/AddPatient.jsx","shared/components/Button.jsx","shared/components/Container.jsx","shared/components/Input.jsx","shared/components/toast.js"],"sourcesContent":["import Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\n\nconst PatientForm = (props) => {\n  const { patient, handleSubmit, handleOnChange } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        label=\"first_name\"\n        label_txt=\"First Name\"\n        type=\"text\"\n        id=\"first_name\"\n        name=\"first_name\"\n        placeholder=\"Enter First Name\"\n        value={patient.first_name}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"last_name\"\n        label_txt=\"Last Name\"\n        type=\"text\"\n        id=\"last_name\"\n        name=\"last_name\"\n        placeholder=\"Enter Last Name\"\n        value={patient.last_name}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"age\"\n        label_txt=\"Age\"\n        type=\"number\"\n        id=\"age\"\n        name=\"age\"\n        placeholder=\"Enter age\"\n        value={patient.age}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"contact\"\n        label_txt=\"Contact Tel.\"\n        type=\"text\"\n        id=\"contact\"\n        name=\"contact\"\n        placeholder=\"Enter telephone number\"\n        value={patient.contact}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"emergency_contact\"\n        label_txt=\"Emergency Contact Tel.\"\n        type=\"text\"\n        id=\"emergency_contact\"\n        name=\"emergency_contact\"\n        placeholder=\"Enter telephone number\"\n        value={patient.emergency_contact}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"pre_existing_conditions\"\n        label_txt=\"Pre-existing Conditions\"\n        type=\"textarea\"\n        id=\"pre_existing_conditions\"\n        name=\"pre_existing_conditions\"\n        placeholder=\"Enter Pre-existing conditions\"\n        value={patient.pre_existing_conditions}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"symptoms\"\n        label_txt=\"Symptoms\"\n        type=\"textarea\"\n        id=\"symptoms\"\n        name=\"symptoms\"\n        placeholder=\"Enter Symptoms\"\n        value={patient.symptoms}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"diagnosis\"\n        label_txt=\"Diagnosis\"\n        type=\"textarea\"\n        id=\"diagnosis\"\n        name=\"diagnosis\"\n        placeholder=\"Enter Diagnosis\"\n        value={patient.diagnosis}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"treatment\"\n        label_txt=\"Treatment\"\n        type=\"textarea\"\n        id=\"treatment\"\n        name=\"treatment\"\n        placeholder=\"Enter Treatment\"\n        value={patient.treatment}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"medication\"\n        label_txt=\"Medication\"\n        type=\"textarea\"\n        id=\"medication\"\n        name=\"medication\"\n        placeholder=\"Enter Medication\"\n        value={patient.medication}\n        onChange={handleOnChange}\n      />\n      <Input\n        label=\"comments\"\n        label_txt=\"Comments\"\n        type=\"textarea\"\n        id=\"comments\"\n        name=\"comments\"\n        placeholder=\"Enter Comments\"\n        value={patient.comments}\n        onChange={handleOnChange}\n      />\n      <br />\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n};\nexport default PatientForm;\n","import { useState, useContext } from \"react\";\nimport Container from \"../../shared/components/Container\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\nimport PatientForm from \"../forms/PatientForm\";\nimport LoadingSpinner from \"../../shared/components/LoadingSpinner\";\n\nconst AddPatient = () => {\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [patient, setPatient] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    age: \"\",\n    contact: \"\",\n    emergency_contact: \"\",\n    pre_existing_conditions: \"\",\n    symptoms: \"\",\n    diagnosis: \"\",\n    treatment: \"\",\n    medication: \"\",\n    comments: \"\",\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    axios\n      .post(\n        `${process.env.REACT_APP_SERVER_URL}api/patients/new`,\n        { ...patient },\n        {\n          headers: {\n            Authorization: \"Bearer \" + auth.token\n          },\n        }\n      )\n      .then(() => {\n        handleSuccess(\"Successfully added patient!\");\n        setTimeout(() => {\n          navigate(\"/patients\");\n        }, 2000);\n      })\n      .catch((err) => {\n        setLoading(false);\n        handleError(err.response.data.message);\n      });\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setPatient({\n      ...patient,\n      [name]: value,\n    });\n  };\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <Container>\n      <div className=\"prose\">\n        <h2 className=\"pb-6\">Add Patient</h2>\n      </div>\n      <PatientForm\n        patient={patient}\n        handleSubmit={handleSubmit}\n        handleOnChange={handleOnChange}\n      />\n    </Container>\n  );\n};\nexport default AddPatient;\n","const Button = (props) => {\n  const { variant, type, onClick, children } = props;\n  let bgColor;\n  let bgColorHover;\n  switch (variant) {\n    case \"primary\":\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n    case \"warning\":\n      bgColor = \"bg-yellow-500\";\n      bgColorHover = \"bg-yellow-700\";\n      break;\n    case \"danger\":\n      bgColor = \"bg-red-500\";\n      bgColorHover = \"bg-red-700\";\n      break;\n    default:\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n  }\n  return (\n    <button\n      className={`block ${bgColor} text-white font-bold py-2 px-6 hover:${bgColorHover}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","const Container = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"bg-white w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl p-10 mx-auto\">\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","const Input = (props) => {\n  const { label, label_txt, type, id, name, placeholder, value, onChange } =\n    props;\n\n  let element;\n  if (\n    type === \"text\" ||\n    type === \"number\" ||\n    type === \"email\" ||\n    type === \"password\"\n  ) {\n    element = (\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"border border-gray-300 shadow p-2 w-full\"\n      />\n    );\n  } else if (type === \"textarea\") {\n    element = (\n      <textarea\n        className=\"border border-gray-300 shadow p-2 w-full\"\n        style={{ resize: \"none\" }}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        rows=\"2\"\n        value={value}\n        onChange={onChange}\n      />\n    );\n  } else if (type === \"file\") {\n    element = (\n      <input\n        className=\"border border-gray-300 shadow w-full file:bg-blue-500 file:text-white file:font-bold file:py-2 file:px-4\"\n        type={type}\n        onChange={onChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={label} className=\"block mb-2 font-bold text-gray-600\">\n        {label_txt}\n      </label>\n      {element}\n    </div>\n  );\n};\nexport default Input;\n","import { toast } from \"react-toastify\";\n\nconst handleSuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nconst handleError = (err) =>\n  toast.error(err, {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 3000,\n  });\n\nexport { handleError };\nexport default handleSuccess;\n"],"names":["props","patient","handleSubmit","handleOnChange","_jsxs","onSubmit","children","_jsx","Input","label","label_txt","type","id","name","placeholder","value","first_name","onChange","last_name","age","contact","emergency_contact","pre_existing_conditions","symptoms","diagnosis","treatment","medication","comments","Button","AddPatient","auth","useContext","AuthContext","navigate","useNavigate","loading","setLoading","useState","setPatient","LoadingSpinner","Container","className","PatientForm","async","e","preventDefault","axios","post","concat","process","_objectSpread","headers","Authorization","token","then","handleSuccess","setTimeout","catch","err","handleError","response","data","message","target","variant","onClick","bgColor","bgColorHover","element","style","resize","rows","htmlFor","toast","error","position","POSITION","TOP_RIGHT","autoClose","msg","success"],"sourceRoot":""}