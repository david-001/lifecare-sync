{"version":3,"file":"static/js/215.1bc33cbe.chunk.js","mappings":"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","sources":["auth/pages/Login.jsx","shared/components/Button.jsx","shared/components/Container.jsx","shared/components/Input.jsx","shared/components/toast.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Container from \"../../shared/components/Container\";\nimport Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { handleError } from \"../../shared/components/toast\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = inputValue;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    axios\n      .post(`${process.env.REACT_APP_SERVER_URL}api/users/login`, {\n        ...inputValue,\n      })\n      .then((resp) => {\n        auth.login(resp.data.userId, resp.data.token, resp.data.expire);\n        navigate(\"/patients\");\n      })\n      .catch((err) => {\n        console.log(err);\n        handleError(err);\n        // if (err.response.data.message) {\n        //   handleError(err.response.data.message);\n        // } else {\n        //   handleError(err.response.data);\n        // }\n      });\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container>\n      <div className=\"prose\">\n        <h2 className=\"pb-6\">Login</h2>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <Input\n          label=\"email\"\n          label_txt=\"Email\"\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleOnChange}\n        />\n        <Input\n          label=\"password\"\n          label_txt=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleOnChange}\n        />\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default Login;\n","const Button = (props) => {\n  const { variant, type, onClick, children } = props;\n  let bgColor;\n  let bgColorHover;\n  switch (variant) {\n    case \"primary\":\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n    case \"warning\":\n      bgColor = \"bg-yellow-500\";\n      bgColorHover = \"bg-yellow-700\";\n      break;\n    case \"danger\":\n      bgColor = \"bg-red-500\";\n      bgColorHover = \"bg-red-700\";\n      break;\n    default:\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n  }\n  return (\n    <button\n      className={`block ${bgColor} text-white font-bold py-2 px-6 hover:${bgColorHover}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","const Container = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"bg-white w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl p-10 mx-auto\">\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","const Input = (props) => {\n  const { label, label_txt, type, id, name, placeholder, value, onChange } =\n    props;\n\n  let element;\n  if (\n    type === \"text\" ||\n    type === \"number\" ||\n    type === \"email\" ||\n    type === \"password\"\n  ) {\n    element = (\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"border border-gray-300 shadow p-2 w-full\"\n      />\n    );\n  } else if (type === \"textarea\") {\n    element = (\n      <textarea\n        className=\"border border-gray-300 shadow p-2 w-full\"\n        style={{ resize: \"none\" }}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        rows=\"2\"\n        value={value}\n        onChange={onChange}\n      />\n    );\n  } else if (type === \"file\") {\n    element = (\n      <input\n        className=\"border border-gray-300 shadow w-full file:bg-blue-500 file:text-white file:font-bold file:py-2 file:px-4\"\n        type={type}\n        onChange={onChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={label} className=\"block mb-2 font-bold text-gray-600\">\n        {label_txt}\n      </label>\n      {element}\n    </div>\n  );\n};\nexport default Input;\n","import { toast } from \"react-toastify\";\n\nconst handleSuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nconst handleError = (err) =>\n  toast.error(err, {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 3000,\n  });\n\nexport { handleError };\nexport default handleSuccess;\n"],"names":["Login","auth","useContext","AuthContext","navigate","useNavigate","inputValue","setInputValue","useState","email","password","handleOnChange","e","name","value","target","_objectSpread","_jsxs","Container","children","_jsx","className","onSubmit","async","preventDefault","axios","post","concat","process","then","resp","login","data","userId","token","expire","catch","err","console","log","handleError","Input","label","label_txt","type","id","placeholder","onChange","Button","variant","props","onClick","bgColor","bgColorHover","element","style","resize","rows","htmlFor","toast","error","position","POSITION","TOP_RIGHT","autoClose","msg","success"],"sourceRoot":""}