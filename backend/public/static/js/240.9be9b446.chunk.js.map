{"version":3,"file":"static/js/240.9be9b446.chunk.js","mappings":"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","sources":["auth/pages/Register.jsx","shared/components/Button.jsx","shared/components/Container.jsx","shared/components/Input.jsx","shared/components/toast.js"],"sourcesContent":["import { useState } from \"react\";\nimport Container from \"../../shared/components/Container\";\nimport Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"../../shared/components/LoadingSpinner\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [inputValue, setInputValue] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  const {\n    name,\n    phone,\n    email,\n    password,\n    password_confirmation,\n  } = inputValue;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    axios\n      .post(\n        `${process.env.REACT_APP_SERVER_URL}api/users/register`,\n        { ...inputValue }\n      )\n      .then(() => {\n        handleSuccess(\"Successfully created account.\");\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 2000);\n      })\n      .catch((err) => {\n        setLoading(false);\n        handleError(err.response.data.message);\n      });\n  };\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n  };\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <Container>\n      <div className=\"prose\">\n        <h2 className=\"pb-6\">Registration</h2>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <Input\n          label=\"name\"\n          label_txt=\"Name\"\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleOnChange}\n        />\n        <Input\n          label=\"phone\"\n          label_txt=\"Phone\"\n          type=\"text\"\n          id=\"phone\"\n          name=\"phone\"\n          placeholder=\"[Optional] Phone Number\"\n          value={phone}\n          onChange={handleOnChange}\n        />\n        <Input\n          label=\"email\"\n          label_txt=\"Email\"\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleOnChange}\n        />\n        <Input\n          label=\"password\"\n          label_txt=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleOnChange}\n        />\n        <Input\n          label=\"password_confirmation\"\n          label_txt=\"Password Confirmation\"\n          type=\"password\"\n          id=\"password_confirmation\"\n          name=\"password_confirmation\"\n          placeholder=\"Password Confirmation\"\n          value={password_confirmation}\n          onChange={handleOnChange}\n        />\n        <br />\n        <Button variant=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default Register;\n","const Button = (props) => {\n  const { variant, type, onClick, children } = props;\n  let bgColor;\n  let bgColorHover;\n  switch (variant) {\n    case \"primary\":\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n    case \"warning\":\n      bgColor = \"bg-yellow-500\";\n      bgColorHover = \"bg-yellow-700\";\n      break;\n    case \"danger\":\n      bgColor = \"bg-red-500\";\n      bgColorHover = \"bg-red-700\";\n      break;\n    default:\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n  }\n  return (\n    <button\n      className={`block ${bgColor} text-white font-bold py-2 px-6 hover:${bgColorHover}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","const Container = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"bg-white w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl p-10 mx-auto\">\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","const Input = (props) => {\n  const { label, label_txt, type, id, name, placeholder, value, onChange } =\n    props;\n\n  let element;\n  if (\n    type === \"text\" ||\n    type === \"number\" ||\n    type === \"email\" ||\n    type === \"password\"\n  ) {\n    element = (\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"border border-gray-300 shadow p-2 w-full\"\n      />\n    );\n  } else if (type === \"textarea\") {\n    element = (\n      <textarea\n        className=\"border border-gray-300 shadow p-2 w-full\"\n        style={{ resize: \"none\" }}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        rows=\"2\"\n        value={value}\n        onChange={onChange}\n      />\n    );\n  } else if (type === \"file\") {\n    element = (\n      <input\n        className=\"border border-gray-300 shadow w-full file:bg-blue-500 file:text-white file:font-bold file:py-2 file:px-4\"\n        type={type}\n        onChange={onChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={label} className=\"block mb-2 font-bold text-gray-600\">\n        {label_txt}\n      </label>\n      {element}\n    </div>\n  );\n};\nexport default Input;\n","import { toast } from \"react-toastify\";\n\nconst handleSuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nconst handleError = (err) =>\n  toast.error(err, {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 3000,\n  });\n\nexport { handleError };\nexport default handleSuccess;\n"],"names":["Register","navigate","useNavigate","loading","setLoading","useState","inputValue","setInputValue","name","phone","email","password","password_confirmation","handleOnChange","e","value","target","_objectSpread","_jsx","LoadingSpinner","_jsxs","Container","children","className","onSubmit","async","preventDefault","axios","post","concat","process","then","handleSuccess","setTimeout","catch","err","handleError","response","data","message","Input","label","label_txt","type","id","placeholder","onChange","Button","variant","props","onClick","bgColor","bgColorHover","element","style","resize","rows","htmlFor","toast","error","position","POSITION","TOP_RIGHT","autoClose","msg","success"],"sourceRoot":""}