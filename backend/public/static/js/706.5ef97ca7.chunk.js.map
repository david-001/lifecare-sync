{"version":3,"file":"static/js/706.5ef97ca7.chunk.js","mappings":"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","sources":["auth/components/UpdateProfileModal.jsx","auth/components/UpdatePasswordModal.jsx","auth/pages/Profile.jsx","shared/components/Button.jsx","shared/components/Container.jsx","shared/components/Input.jsx","shared/components/toast.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst UpdateProfileModal = (props) => {\n  const { show, handleClose, triggerRefresh } = props;\n  const auth = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(props.profile);\n  const { name, phone } = profile;\n\n  const handleSubmitProf = async (e) => {\n    e.preventDefault();\n    axios\n      .patch(\n        `${process.env.REACT_APP_SERVER_URL}api/users/updateprofile/${auth.userId}`,\n        { ...profile },\n        {\n          headers: {\n            Authorization: \"Bearer \" + auth.token,\n          },\n        }\n      )\n      .then((resp) => {\n        handleSuccess(\"Successfully updated profile!\");\n        handleClose();\n      })\n      .then(() => triggerRefresh())\n      .catch((err) => {\n        console.log(\"err\");\n        handleError(err.response.data.message);\n      });\n  };\n\n  const handleOnProfChange = (e) => {\n    const { name, value } = e.target;\n    setProfile({\n      ...profile,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      {show ? (\n        <div className=\"bg-black bg-opacity-80 w-full h-full fixed top-0 left-0 flex justify-center items-center\">\n          <div className=\"bg-white overflow-y-auto w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl pl-10 pb-10\">\n            <div className=\"bg-white overflow-auto flex justify-end\">\n              <button\n                type=\"button\"\n                className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                onClick={handleClose}\n              >\n                <span className=\"sr-only\">Close menu</span>\n                <svg\n                  className=\"h-6 w-6\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n            <div className=\"pr-10\">\n              <div className=\"prose\">\n                <h2 className=\"pb-6\">Update My Profile</h2>\n              </div>\n\n              <form onSubmit={handleSubmitProf}>\n                <Input\n                  label=\"name\"\n                  label_txt=\"Name\"\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  onChange={handleOnProfChange}\n                />\n                <Input\n                  label=\"phone\"\n                  label_txt=\"Phone\"\n                  type=\"text\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  placeholder=\"[Optional] Phone Number\"\n                  value={phone}\n                  onChange={handleOnProfChange}\n                />\n                <br />\n                <Button variant=\"primary\" type=\"submit\">\n                  Update Profile\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"hidden\"></div>\n      )}\n    </div>\n  );\n};\nexport default UpdateProfileModal;\n","import { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/Input\";\nimport Button from \"../../shared/components/Button\";\nimport handleSuccess, { handleError } from \"../../shared/components/toast\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst UpdatePasswordModal = (props) => {\n  const { show, handleClose, triggerRefresh } = props;\n  const auth = useContext(AuthContext);\n\n  const [password, setPassword] = useState({\n    password_initial: \"\",\n    password_update: \"\",\n  });\n\n  const { password_initial, password_update } = password;\n\n  const handleSubmitPass = async (e) => {\n    e.preventDefault();\n    axios\n      .patch(\n        `${process.env.REACT_APP_SERVER_URL}api/users/updatepassword/${auth.userId}`,\n        { ...password },\n        {\n          headers: {\n            Authorization: \"Bearer \" + auth.token,\n          },\n        }\n      )\n      .then((resp) => {\n        handleSuccess(\"Successfully updated password!\");\n        handleClose();\n      })\n      .then(() => triggerRefresh())\n      .catch((err) => {\n        handleError(err.response.data.message);\n      });\n  };\n\n  const handleOnPassChange = (e) => {\n    const { name, value } = e.target;\n    setPassword({\n      ...password,\n      [name]: value,\n    });\n  };\n  return (\n    <div>\n      {show ? (\n        <div className=\"bg-black bg-opacity-80 w-full h-full fixed top-0 left-0 flex justify-center items-center\">\n          <div className=\"bg-white overflow-y-auto w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl pl-10 pb-10\">\n            <div className=\"bg-white overflow-auto flex justify-end\">\n              <button\n                type=\"button\"\n                className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                onClick={handleClose}\n              >\n                <span className=\"sr-only\">Close menu</span>\n                <svg\n                  className=\"h-6 w-6\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n            <div className=\"pr-10\">\n              <div className=\"prose\">\n                <h2 className=\"pb-6\">Update Password</h2>\n              </div>\n              <form onSubmit={handleSubmitPass}>\n                <Input\n                  label=\"password_initial\"\n                  label_txt=\"Initial Password\"\n                  type=\"password\"\n                  id=\"password_initial\"\n                  name=\"password_initial\"\n                  placeholder=\"Initial Password\"\n                  value={password_initial}\n                  onChange={handleOnPassChange}\n                />\n                <Input\n                  label=\"password_update\"\n                  label_txt=\"Updated Password\"\n                  type=\"password\"\n                  id=\"password_update\"\n                  name=\"password_update\"\n                  placeholder=\"Update Password\"\n                  value={password_update}\n                  onChange={handleOnPassChange}\n                />\n                <br />\n                <Button variant=\"primary\" type=\"submit\">\n                  Update Password\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"hidden\"></div>\n      )}\n    </div>\n  );\n};\nexport default UpdatePasswordModal;\n","import { useState, useEffect, useContext } from \"react\";\nimport Container from \"../../shared/components/Container\";\nimport Button from \"../../shared/components/Button\";\nimport { handleError } from \"../../shared/components/toast\";\nimport profile_photo from \"../../imgs/profile_photo.jpeg\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport LoadingSpinner from \"../../shared/components/LoadingSpinner\";\nimport UpdateProfileModal from \"../components/UpdateProfileModal\";\nimport UpdatePasswordModal from \"../components/UpdatePasswordModal\";\n\nconst Profile = () => {\n  const auth = useContext(AuthContext);\n  const [profile, setProfile] = useState(null);\n  const [updateProfileModal, setUpdateProfileModal] = useState(false);\n  const [updatePasswordModal, setUpdatePasswordModal] = useState(false);\n  const [updatedProfile, setUpdatedProfile] = useState(false);\n  const [updatedPassword, setUpdatedPassword] = useState(false);\n\n  useEffect(() => {\n    if (auth.token) {\n      axios\n        .get(`${process.env.REACT_APP_SERVER_URL}api/users/profile`, {\n          headers: {\n            Authorization: \"Bearer \" + auth.token,\n          },\n        })\n        .then((resp) => {\n          const name = resp.data.name;\n          // const image = resp.data.profile.image;\n          const phone = resp.data.phone;\n          setProfile({\n            name,\n            phone,\n          });\n        })\n        .catch((err) => {\n          handleError(err);\n        });\n    }\n  }, [auth, updatedProfile, updatedPassword]);\n\n  if (!profile) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <Container>\n      <div className=\"prose\">\n        <h2 className=\"pb-6\">My Profile</h2>\n      </div>\n      <hr />\n      <br />\n      <div>\n        <div className=\"flex flex-wrap\">\n          <div className=\"pb-10 flex justify-center items-center lg:w-52\">\n            <img\n              src={\n                profile.image\n                  ? process.env.REACT_APP_SERVER_URL + profile.image\n                  : profile_photo\n              }\n              alt={`${profile.name}`}\n            />\n          </div>\n\n          <div className=\"w-2/3 lg:pl-8\">\n            <table>\n              <tbody>\n                <tr>\n                  <td className=\"font-bold\">Name</td>\n                  <td className=\"py-2 pl-4\">{profile.name}</td>\n                </tr>\n                <tr>\n                  <td className=\"font-bold\">Phone</td>\n                  <td className=\"py-2 pl-4\">{profile.phone}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-between\">\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            setUpdateProfileModal(true);\n          }}\n        >\n          Update Profile\n        </Button>\n        {/* <Button\n          variant=\"danger\"\n          onClick={() => {\n            setUpdatePasswordModal(true);\n          }}\n        >\n          Update Password\n        </Button> */}\n      </div>\n      <div>\n        <UpdateProfileModal\n          show={updateProfileModal}\n          handleClose={() => setUpdateProfileModal(false)}\n          profile={profile}\n          triggerRefresh={() => setUpdatedProfile((prev) => !prev)}\n        />\n      </div>\n      <div>\n        <UpdatePasswordModal\n          show={updatePasswordModal}\n          handleClose={() => setUpdatePasswordModal(false)}\n          triggerRefresh={() => setUpdatedPassword((prev) => !prev)}\n        />\n      </div>\n    </Container>\n  );\n};\nexport default Profile;\n","const Button = (props) => {\n  const { variant, type, onClick, children } = props;\n  let bgColor;\n  let bgColorHover;\n  switch (variant) {\n    case \"primary\":\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n    case \"warning\":\n      bgColor = \"bg-yellow-500\";\n      bgColorHover = \"bg-yellow-700\";\n      break;\n    case \"danger\":\n      bgColor = \"bg-red-500\";\n      bgColorHover = \"bg-red-700\";\n      break;\n    default:\n      bgColor = \"bg-blue-500\";\n      bgColorHover = \"bg-blue-700\";\n      break;\n  }\n  return (\n    <button\n      className={`block ${bgColor} text-white font-bold py-2 px-6 hover:${bgColorHover}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","const Container = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"bg-white w-full h-fit max-w-sm md:max-w-lg lg:max-w-3xl p-10 mx-auto\">\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","const Input = (props) => {\n  const { label, label_txt, type, id, name, placeholder, value, onChange } =\n    props;\n\n  let element;\n  if (\n    type === \"text\" ||\n    type === \"number\" ||\n    type === \"email\" ||\n    type === \"password\"\n  ) {\n    element = (\n      <input\n        type={type}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"border border-gray-300 shadow p-2 w-full\"\n      />\n    );\n  } else if (type === \"textarea\") {\n    element = (\n      <textarea\n        className=\"border border-gray-300 shadow p-2 w-full\"\n        style={{ resize: \"none\" }}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        rows=\"2\"\n        value={value}\n        onChange={onChange}\n      />\n    );\n  } else if (type === \"file\") {\n    element = (\n      <input\n        className=\"border border-gray-300 shadow w-full file:bg-blue-500 file:text-white file:font-bold file:py-2 file:px-4\"\n        type={type}\n        onChange={onChange}\n      />\n    );\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={label} className=\"block mb-2 font-bold text-gray-600\">\n        {label_txt}\n      </label>\n      {element}\n    </div>\n  );\n};\nexport default Input;\n","import { toast } from \"react-toastify\";\n\nconst handleSuccess = (msg) => {\n  toast.success(msg, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nconst handleError = (err) =>\n  toast.error(err, {\n    position: toast.POSITION.TOP_RIGHT,\n    autoClose: 3000,\n  });\n\nexport { handleError };\nexport default handleSuccess;\n"],"names":["props","show","handleClose","triggerRefresh","auth","useContext","AuthContext","profile","setProfile","useState","name","phone","handleOnProfChange","e","value","target","_objectSpread","_jsx","children","className","_jsxs","type","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","async","preventDefault","axios","patch","concat","process","userId","headers","Authorization","token","then","resp","handleSuccess","catch","err","console","log","handleError","response","data","message","Input","label","label_txt","id","placeholder","onChange","Button","variant","password","setPassword","password_initial","password_update","handleOnPassChange","Profile","updateProfileModal","setUpdateProfileModal","updatePasswordModal","setUpdatePasswordModal","updatedProfile","setUpdatedProfile","updatedPassword","setUpdatedPassword","useEffect","get","Container","src","image","profile_photo","alt","UpdateProfileModal","prev","UpdatePasswordModal","LoadingSpinner","bgColor","bgColorHover","element","style","resize","rows","htmlFor","toast","error","position","POSITION","TOP_RIGHT","autoClose","msg","success"],"sourceRoot":""}